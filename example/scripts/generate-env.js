#!/usr/bin/env node

const path = require('node:path');
const fs = require('node:fs');

const project_root = path.resolve(__dirname, '..');

const pak = JSON.parse(
  fs.readFileSync(path.join(project_root, 'package.json'), 'utf8')
);
const file = path.join(project_root, 'src', 'env.ts');
console.log(`üìù Generate the ${pak.name}@${pak.version} env file: ${file}`);
const content = `// This file is automatically generated. The user needs to manually fill in the necessary parameters.\n
// The user needs to manually fill in the necessary parameters.
// If it is true, it will enter the default UI component demonstration, otherwise it will demonstrate the complete example.
export const test = true;
// Whether to use sandbox configuration for debugging or development. See server settings for details.
export const useSendBox = false;
// Whether it is development and debugging mode. Enabled by default.
export const isDevMode = true;
// The key of the application app. Obtain it through the console or official website.
export const appKey = '';
// Use 'agora' overseas and 'easemob' domestically. Domestic users can use password to log in.
export const accountType = ''; // agora or easemob
// agora's application key. Obtain it through the console or official website.
export const agoraAppId = '';
// The sender ID of the FCM.
export const fcmSenderId = '';
// demo mode type.
export const demoType = 1; // 1. ui-dev 2. dev 3. prod 4. ui-prod
// Preset account information settings. Save yourself the hassle of filling it out manually.
export const account = [{ id: '', token: '' }];
`;
if (fs.existsSync(file) === false) {
  fs.writeFileSync(file, content, 'utf-8');
}
